plugins {
    id 'java'
    id 'me.champeau.jmh' version '0.7.2'
}

group = 'com.hft.memory'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {
    // JMH dependencies
    jmh 'org.openjdk.jmh:jmh-core:1.37'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    
    implementation 'net.sf.trove4j:trove4j:3.0.3'
    
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jmh {
    jmhVersion = '1.37'
    warmupIterations = 2
    iterations = 3
    fork = 1
    timeUnit = 'ns'
    duplicateClassesStrategy = DuplicatesStrategy.WARN
    resultFormat = 'CSV'
    humanOutputFile = project.file("${project.buildDir}/reports/jmh/human.txt")
    resultsFile = project.file("${project.buildDir}/reports/jmh/results.csv")
    // Run all JMH benchmarks by default
    // includes = ['.*']  // Run all benchmarks (this is the default)
}

test {
    useJUnitPlatform()
}

// Custom task to generate multiple JMH output formats
task jmhReport {
    dependsOn jmh
    doLast {
        // Generate CSV for spreadsheet analysis
        exec {
            workingDir project.buildDir
            commandLine 'java', '-jar', 'libs/memory-optimization-1.0-SNAPSHOT-jmh.jar', '-rf', 'csv', '-rff', 'reports/jmh/results.csv'
        }
        // Generate JSON for programmatic analysis  
        exec {
            workingDir project.buildDir
            commandLine 'java', '-jar', 'libs/memory-optimization-1.0-SNAPSHOT-jmh.jar', '-rf', 'json', '-rff', 'reports/jmh/results.json'
        }
    }
}